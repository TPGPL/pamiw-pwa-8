@inherits LayoutComponentBase
@inject AuthState AuthState
@inject ThemeSettings themeSettings
@inject IStringLocalizer<Resources.AppResources> Loc

<div class="@(themeSettings.CurrentTheme == AppTheme.Dark ? "page-dark" : null) page">
    <div class="@(themeSettings.CurrentTheme == AppTheme.Dark ? "sidebar-dark" : null) sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="@(themeSettings.CurrentTheme == AppTheme.Dark ? "top-row-dark" : null) top-row px-4">
            @if (!AuthState.IsAuthenticated)
            {
                <NavLink class="ml-md-auto" href="login">
                    @Loc["LoginButton"]
                </NavLink>
                <NavLink class="ml-md-auto" href="register">
                    @Loc["RegisterButton"]
                </NavLink>
            }
            else
            {
                <span class="ml-md-auto">@Loc["LoginLabel"] <strong>@AuthState.Username</strong></span>
                <NavLink class="ml-md-auto" href="logout">
                    @Loc["LogoutButton"]
                </NavLink>
            }

            <NavLink class="ml-md-auto" href="settings">
                @Loc["SettingsButton"]
            </NavLink>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {

    protected override void OnInitialized()
    {
        AuthState.OnChange += StateHasChanged;
        themeSettings.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        AuthState.OnChange -= StateHasChanged;
        themeSettings.OnChange -= StateHasChanged;
    }
}