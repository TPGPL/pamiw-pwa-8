@page "/authors/create"
@inject IAuthorService service
@inject NavigationManager manager
@inject AuthState authState
@inject IStringLocalizer<Resources.AppResources> Loc

<PageTitle>[PAMIW] @Loc["CreateAuthorHeader"]</PageTitle>

    <h1>@Loc["CreateAuthorHeader"]</h1>

@if (author is not null)
{
    @if (message is not null)
    {
        <p class="alert alert-danger">@Loc["ErrorLabel"] @message</p>
    }

    <AuthorForm author="author" OnValidSubmit="HandleSubmit" />
}

@code {
    protected override async Task OnInitializedAsync()
    {
        if (!await authState.TryAuthenticateAsync())
        {
            manager.NavigateTo("/login");
        }
    }

    private Author author = new Author();
    private String? message = null;

    public async Task HandleSubmit()
    {
        var response = await service.CreateAuthorAsync(author);

        if (!response.Success)
        {
            message = response.Message;
            return;
        }

        manager.NavigateTo("/authors");
    }
}
