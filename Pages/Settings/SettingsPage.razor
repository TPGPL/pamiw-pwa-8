@page "/settings"
@inject IJSRuntime JSRuntime
@inject NavigationManager manager
@inject AuthState authState
@inject ThemeSettings themeSettings
@inject IStringLocalizer<Resources.AppResources> Loc
@using System.Globalization

<PageTitle>[PAMIW] @Loc["SettingsHeader"]</PageTitle>

    <h1>@Loc["SettingsHeader"]</h1>

<div class="padded-form">
    <div>
        <label class="form-label">
            @Loc["LanguageLabel"]
        </label>
        <select class="@(themeSettings.CurrentTheme == AppTheme.Dark ? "form-select-dark" : null) form-select" @bind="Culture">
            @foreach (var culture in supportedCultures)
            {
                <option value="@culture">@culture.DisplayName</option>
            }
        </select>
    </div>
    <div>
        <label class="form-label">
            @Loc["ThemeLabel"]
        </label>
        <select class="@(themeSettings.CurrentTheme == AppTheme.Dark ? "form-select-dark" : null) form-select" @bind="Theme">
            @foreach (var theme in appThemes)
            {
                <option value="@theme">@theme.ToString()</option>
            }
        </select>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        themeSettings.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        themeSettings.OnChange -= StateHasChanged;
    }

    protected override async Task OnInitializedAsync()
    {
        await authState.TryAuthenticateAsync();
    }

    private AppTheme[] appThemes = [AppTheme.Light, AppTheme.Dark];

    private AppTheme Theme
    {
        get => themeSettings.CurrentTheme;
        set
        {
            if (themeSettings.CurrentTheme != value)
            {
                themeSettings.SetTheme(value);

                var js = (IJSInProcessRuntime)JSRuntime;
                js.InvokeVoid("appTheme.set", value.ToString());
            }
        }
    }

    private CultureInfo[] supportedCultures = new[]
    {
        new CultureInfo("en-US"),
        new CultureInfo("pl-PL"),
    };

    private CultureInfo Culture
    {
        get => CultureInfo.CurrentCulture;
        set
        {
            if (CultureInfo.CurrentCulture != value)
            {
                var js = (IJSInProcessRuntime)JSRuntime;
                js.InvokeVoid("blazorCulture.set", value.Name);

                manager.NavigateTo(manager.Uri, forceLoad: true);
            }
        }
    }
}