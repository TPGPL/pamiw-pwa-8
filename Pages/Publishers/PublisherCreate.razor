@page "/publishers/create"
@inject IPublisherService service
@inject NavigationManager manager
@inject AuthState authState
@inject IStringLocalizer<Resources.AppResources> Loc

<PageTitle>[PAMIW] @Loc["CreatePublisherHeader"]</PageTitle>

    <h1>@Loc["CreatePublisherHeader"]</h1>

@if (publisher is not null)
{
    @if (message is not null)
    {
        <p class="alert alert-danger">@Loc["ErrorLabel"] @message</p>
    }

    <PublisherForm publisher="publisher" OnValidSubmit="HandleSubmit" />
}

@code {
    private Publisher publisher = new Publisher();
    private string? message;

    protected override async Task OnInitializedAsync()
    {
        if (!await authState.TryAuthenticateAsync())
        {
            manager.NavigateTo("/login");
        }
    }

    public async Task HandleSubmit()
    {
        var response = await service.CreatePublisherAsync(publisher);

        if (!response.Success)
        {
            message = response.Message;
            return;
        }

        manager.NavigateTo("/publishers");
    }
}
